/*
 * stm32f407xx_spi_driver.h
 */

#ifndef INC_STM32F407XX_SPI_DRIVER_H_
#define INC_STM32F407XX_SPI_DRIVER_H_

#include "stm32f407xx.h"

typedef struct
{
    uint8_t SPI_DeviceMode;     /*!< possible values from @SPI_DeviceMode */
    uint8_t SPI_BusConfig;      /*!< possible values from @SPI_BusConfig */
    uint8_t SPI_SclkSpeed;      /*!< possible values from @SPI_SclkSpeed */
    uint8_t SPI_DFF;    		/*!< possible values from @SPI_DFF */
    uint8_t SPI_CPOL;         	/*!< possible values from @SPI_CPOL */
    uint8_t SPI_CPHA;     		/*!< possible values from @SPI_CPHA*/
    uint8_t SPI_SSM;     		/*!< possible values from @SPI_SSM*/
} SPI_Config_t;

typedef struct
{
	SPI_RegDef_t	*pSPIX;		/*!< This holds the base address of SPIx(x:0,1,2) peripherals*/
	SPI_Config_t	SPIConfig;
}SPI_Handle_t;

/*
 *
 *
 */


#endif /* INC_STM32F407XX_SPI_DRIVER_H_ */

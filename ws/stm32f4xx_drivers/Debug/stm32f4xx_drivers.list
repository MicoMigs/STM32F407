
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000504  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800068c  08000694  00001694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800068c  0800068c  00001694  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800068c  0800068c  00001694  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800068c  08000694  00001694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800068c  0800068c  0000168c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000690  08000690  00001690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001694  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001694  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000812  00000000  00000000  000016c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000278  00000000  00000000  00001ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00002150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000073  00000000  00000000  000021f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014e3  00000000  00000000  0000226b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000cc3  00000000  00000000  0000374e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005b58  00000000  00000000  00004411  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009f69  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  00009fac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004b  00000000  00000000  0000a180  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000674 	.word	0x08000674

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000674 	.word	0x08000674

080001c8 <GPIO_PeriClockControl>:
 * @return      - none
 *
 * @note        - Make sure to enable the clock before accessing GPIO registers
 *********************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 80001d4:	78fb      	ldrb	r3, [r7, #3]
 80001d6:	2b01      	cmp	r3, #1
 80001d8:	d157      	bne.n	800028a <GPIO_PeriClockControl+0xc2>
	{
		if (pGPIOx == GPIOA)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a59      	ldr	r2, [pc, #356]	@ (8000344 <GPIO_PeriClockControl+0x17c>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d106      	bne.n	80001f0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80001e2:	4b59      	ldr	r3, [pc, #356]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80001e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e6:	4a58      	ldr	r2, [pc, #352]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80001e8:	f043 0301 	orr.w	r3, r3, #1
 80001ec:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 80001ee:	e0a3      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB)
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a56      	ldr	r2, [pc, #344]	@ (800034c <GPIO_PeriClockControl+0x184>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001f8:	4b53      	ldr	r3, [pc, #332]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001fc:	4a52      	ldr	r2, [pc, #328]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80001fe:	f043 0302 	orr.w	r3, r3, #2
 8000202:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000204:	e098      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC)
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a51      	ldr	r2, [pc, #324]	@ (8000350 <GPIO_PeriClockControl+0x188>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800020e:	4b4e      	ldr	r3, [pc, #312]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000210:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000212:	4a4d      	ldr	r2, [pc, #308]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000214:	f043 0304 	orr.w	r3, r3, #4
 8000218:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800021a:	e08d      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a4d      	ldr	r2, [pc, #308]	@ (8000354 <GPIO_PeriClockControl+0x18c>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000224:	4b48      	ldr	r3, [pc, #288]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000226:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000228:	4a47      	ldr	r2, [pc, #284]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800022a:	f043 0308 	orr.w	r3, r3, #8
 800022e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000230:	e082      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE)
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a48      	ldr	r2, [pc, #288]	@ (8000358 <GPIO_PeriClockControl+0x190>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800023a:	4b43      	ldr	r3, [pc, #268]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800023c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800023e:	4a42      	ldr	r2, [pc, #264]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000240:	f043 0310 	orr.w	r3, r3, #16
 8000244:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000246:	e077      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a44      	ldr	r2, [pc, #272]	@ (800035c <GPIO_PeriClockControl+0x194>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d106      	bne.n	800025e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000250:	4b3d      	ldr	r3, [pc, #244]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000254:	4a3c      	ldr	r2, [pc, #240]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000256:	f043 0320 	orr.w	r3, r3, #32
 800025a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800025c:	e06c      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG)
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4a3f      	ldr	r2, [pc, #252]	@ (8000360 <GPIO_PeriClockControl+0x198>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d106      	bne.n	8000274 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000266:	4b38      	ldr	r3, [pc, #224]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000268:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800026a:	4a37      	ldr	r2, [pc, #220]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800026c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000270:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000272:	e061      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a3b      	ldr	r2, [pc, #236]	@ (8000364 <GPIO_PeriClockControl+0x19c>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d15d      	bne.n	8000338 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 800027c:	4b32      	ldr	r3, [pc, #200]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800027e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000280:	4a31      	ldr	r2, [pc, #196]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000282:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000286:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000288:	e056      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		if (pGPIOx == GPIOA)
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a2d      	ldr	r2, [pc, #180]	@ (8000344 <GPIO_PeriClockControl+0x17c>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d106      	bne.n	80002a0 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 8000292:	4b2d      	ldr	r3, [pc, #180]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000296:	4a2c      	ldr	r2, [pc, #176]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000298:	f023 0301 	bic.w	r3, r3, #1
 800029c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800029e:	e04b      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB)
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a2a      	ldr	r2, [pc, #168]	@ (800034c <GPIO_PeriClockControl+0x184>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002a8:	4b27      	ldr	r3, [pc, #156]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ac:	4a26      	ldr	r2, [pc, #152]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002ae:	f023 0302 	bic.w	r3, r3, #2
 80002b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002b4:	e040      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a25      	ldr	r2, [pc, #148]	@ (8000350 <GPIO_PeriClockControl+0x188>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002be:	4b22      	ldr	r3, [pc, #136]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002c2:	4a21      	ldr	r2, [pc, #132]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002c4:	f023 0304 	bic.w	r3, r3, #4
 80002c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ca:	e035      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD)
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a21      	ldr	r2, [pc, #132]	@ (8000354 <GPIO_PeriClockControl+0x18c>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80002d4:	4b1c      	ldr	r3, [pc, #112]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002d8:	4a1b      	ldr	r2, [pc, #108]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002da:	f023 0308 	bic.w	r3, r3, #8
 80002de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002e0:	e02a      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a1c      	ldr	r2, [pc, #112]	@ (8000358 <GPIO_PeriClockControl+0x190>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80002ea:	4b17      	ldr	r3, [pc, #92]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ee:	4a16      	ldr	r2, [pc, #88]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 80002f0:	f023 0310 	bic.w	r3, r3, #16
 80002f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002f6:	e01f      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a18      	ldr	r2, [pc, #96]	@ (800035c <GPIO_PeriClockControl+0x194>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000300:	4b11      	ldr	r3, [pc, #68]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000304:	4a10      	ldr	r2, [pc, #64]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000306:	f023 0320 	bic.w	r3, r3, #32
 800030a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800030c:	e014      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a13      	ldr	r2, [pc, #76]	@ (8000360 <GPIO_PeriClockControl+0x198>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000316:	4b0c      	ldr	r3, [pc, #48]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031a:	4a0b      	ldr	r2, [pc, #44]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800031c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000320:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000322:	e009      	b.n	8000338 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a0f      	ldr	r2, [pc, #60]	@ (8000364 <GPIO_PeriClockControl+0x19c>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d105      	bne.n	8000338 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 800032c:	4b06      	ldr	r3, [pc, #24]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000330:	4a05      	ldr	r2, [pc, #20]	@ (8000348 <GPIO_PeriClockControl+0x180>)
 8000332:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000336:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000338:	bf00      	nop
 800033a:	370c      	adds	r7, #12
 800033c:	46bd      	mov	sp, r7
 800033e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000342:	4770      	bx	lr
 8000344:	40020000 	.word	0x40020000
 8000348:	40023800 	.word	0x40023800
 800034c:	40020400 	.word	0x40020400
 8000350:	40020800 	.word	0x40020800
 8000354:	40020c00 	.word	0x40020c00
 8000358:	40021000 	.word	0x40021000
 800035c:	40021400 	.word	0x40021400
 8000360:	40021800 	.word	0x40021800
 8000364:	40021c00 	.word	0x40021c00

08000368 <GPIO_Init>:
 * @return      - none
 *
 * @note        - Must enable the peripheral clock before initialization
 *********************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000368:	b480      	push	{r7}
 800036a:	b085      	sub	sp, #20
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000370:	2300      	movs	r3, #0
 8000372:	60fb      	str	r3, [r7, #12]
	//1. Configure mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	795b      	ldrb	r3, [r3, #5]
 8000378:	2b03      	cmp	r3, #3
 800037a:	d81e      	bhi.n	80003ba <GPIO_Init+0x52>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	795b      	ldrb	r3, [r3, #5]
 8000380:	461a      	mov	r2, r3
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	791b      	ldrb	r3, [r3, #4]
 8000386:	005b      	lsls	r3, r3, #1
 8000388:	fa02 f303 	lsl.w	r3, r2, r3
 800038c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	681a      	ldr	r2, [r3, #0]
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	791b      	ldrb	r3, [r3, #4]
 8000398:	4619      	mov	r1, r3
 800039a:	2303      	movs	r3, #3
 800039c:	408b      	lsls	r3, r1
 800039e:	43db      	mvns	r3, r3
 80003a0:	4619      	mov	r1, r3
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	400a      	ands	r2, r1
 80003a8:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	6819      	ldr	r1, [r3, #0]
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	68fa      	ldr	r2, [r7, #12]
 80003b6:	430a      	orrs	r2, r1
 80003b8:	601a      	str	r2, [r3, #0]
	}else{
		//this part will code later. ( interrupt mode)
	}
	temp = 0;
 80003ba:	2300      	movs	r3, #0
 80003bc:	60fb      	str	r3, [r7, #12]

	//2. Configure Speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	799b      	ldrb	r3, [r3, #6]
 80003c2:	461a      	mov	r2, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	005b      	lsls	r3, r3, #1
 80003ca:	fa02 f303 	lsl.w	r3, r2, r3
 80003ce:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	689a      	ldr	r2, [r3, #8]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	4619      	mov	r1, r3
 80003dc:	2303      	movs	r3, #3
 80003de:	408b      	lsls	r3, r1
 80003e0:	43db      	mvns	r3, r3
 80003e2:	4619      	mov	r1, r3
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	400a      	ands	r2, r1
 80003ea:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	6899      	ldr	r1, [r3, #8]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	68fa      	ldr	r2, [r7, #12]
 80003f8:	430a      	orrs	r2, r1
 80003fa:	609a      	str	r2, [r3, #8]

	temp=0;
 80003fc:	2300      	movs	r3, #0
 80003fe:	60fb      	str	r3, [r7, #12]

	//3. Configure pupd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	79db      	ldrb	r3, [r3, #7]
 8000404:	461a      	mov	r2, r3
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	005b      	lsls	r3, r3, #1
 800040c:	fa02 f303 	lsl.w	r3, r2, r3
 8000410:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	4619      	mov	r1, r3
 800041e:	2303      	movs	r3, #3
 8000420:	408b      	lsls	r3, r1
 8000422:	43db      	mvns	r3, r3
 8000424:	4619      	mov	r1, r3
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	400a      	ands	r2, r1
 800042c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68d9      	ldr	r1, [r3, #12]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	68fa      	ldr	r2, [r7, #12]
 800043a:	430a      	orrs	r2, r1
 800043c:	60da      	str	r2, [r3, #12]

	temp=0;
 800043e:	2300      	movs	r3, #0
 8000440:	60fb      	str	r3, [r7, #12]

	//4. configure optype
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	7a1b      	ldrb	r3, [r3, #8]
 8000446:	461a      	mov	r2, r3
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	791b      	ldrb	r3, [r3, #4]
 800044c:	fa02 f303 	lsl.w	r3, r2, r3
 8000450:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	685a      	ldr	r2, [r3, #4]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	791b      	ldrb	r3, [r3, #4]
 800045c:	4619      	mov	r1, r3
 800045e:	2301      	movs	r3, #1
 8000460:	408b      	lsls	r3, r1
 8000462:	43db      	mvns	r3, r3
 8000464:	4619      	mov	r1, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	400a      	ands	r2, r1
 800046c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	6859      	ldr	r1, [r3, #4]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	68fa      	ldr	r2, [r7, #12]
 800047a:	430a      	orrs	r2, r1
 800047c:	605a      	str	r2, [r3, #4]

	//5. configure alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	795b      	ldrb	r3, [r3, #5]
 8000482:	2b02      	cmp	r3, #2
 8000484:	d131      	bne.n	80004ea <GPIO_Init+0x182>
		//configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	791b      	ldrb	r3, [r3, #4]
 800048a:	08db      	lsrs	r3, r3, #3
 800048c:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	791b      	ldrb	r3, [r3, #4]
 8000492:	f003 0307 	and.w	r3, r3, #7
 8000496:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (4 * temp2 ) ); //clearing
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	7afa      	ldrb	r2, [r7, #11]
 800049e:	3208      	adds	r2, #8
 80004a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004a4:	7abb      	ldrb	r3, [r7, #10]
 80004a6:	009b      	lsls	r3, r3, #2
 80004a8:	220f      	movs	r2, #15
 80004aa:	fa02 f303 	lsl.w	r3, r2, r3
 80004ae:	43db      	mvns	r3, r3
 80004b0:	4618      	mov	r0, r3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	7afa      	ldrb	r2, [r7, #11]
 80004b8:	4001      	ands	r1, r0
 80004ba:	3208      	adds	r2, #8
 80004bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2));
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	7afa      	ldrb	r2, [r7, #11]
 80004c6:	3208      	adds	r2, #8
 80004c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	7a5b      	ldrb	r3, [r3, #9]
 80004d0:	461a      	mov	r2, r3
 80004d2:	7abb      	ldrb	r3, [r7, #10]
 80004d4:	009b      	lsls	r3, r3, #2
 80004d6:	fa02 f303 	lsl.w	r3, r2, r3
 80004da:	4618      	mov	r0, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	7afa      	ldrb	r2, [r7, #11]
 80004e2:	4301      	orrs	r1, r0
 80004e4:	3208      	adds	r2, #8
 80004e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80004ea:	bf00      	nop
 80004ec:	3714      	adds	r7, #20
 80004ee:	46bd      	mov	sp, r7
 80004f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f4:	4770      	bx	lr

080004f6 <GPIO_ToggleOutputPin>:
 *
 * @note        - Reads ODR and flips the bit for the pin
 *********************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80004f6:	b480      	push	{r7}
 80004f8:	b083      	sub	sp, #12
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	6078      	str	r0, [r7, #4]
 80004fe:	460b      	mov	r3, r1
 8000500:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber );
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	695b      	ldr	r3, [r3, #20]
 8000506:	78fa      	ldrb	r2, [r7, #3]
 8000508:	2101      	movs	r1, #1
 800050a:	fa01 f202 	lsl.w	r2, r1, r2
 800050e:	405a      	eors	r2, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	615a      	str	r2, [r3, #20]
}
 8000514:	bf00      	nop
 8000516:	370c      	adds	r7, #12
 8000518:	46bd      	mov	sp, r7
 800051a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800051e:	4770      	bx	lr

08000520 <delay>:
 *      Author: micom
 */

#include "stm32f407xx.h"

void delay(void){
 8000520:	b480      	push	{r7}
 8000522:	b083      	sub	sp, #12
 8000524:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 8000526:	2300      	movs	r3, #0
 8000528:	607b      	str	r3, [r7, #4]
 800052a:	e002      	b.n	8000532 <delay+0x12>
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	3301      	adds	r3, #1
 8000530:	607b      	str	r3, [r7, #4]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4a04      	ldr	r2, [pc, #16]	@ (8000548 <delay+0x28>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d9f8      	bls.n	800052c <delay+0xc>
}
 800053a:	bf00      	nop
 800053c:	bf00      	nop
 800053e:	370c      	adds	r7, #12
 8000540:	46bd      	mov	sp, r7
 8000542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000546:	4770      	bx	lr
 8000548:	0007a11f 	.word	0x0007a11f

0800054c <main>:
int main(void)
{
 800054c:	b580      	push	{r7, lr}
 800054e:	b084      	sub	sp, #16
 8000550:	af00      	add	r7, sp, #0
	// 1) Enable GPIOD Clock
	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000552:	2101      	movs	r1, #1
 8000554:	481f      	ldr	r0, [pc, #124]	@ (80005d4 <main+0x88>)
 8000556:	f7ff fe37 	bl	80001c8 <GPIO_PeriClockControl>

	// 2) Configure PD12 as output
	GPIO_Handle_t GPIO_LED;
	GPIO_LED.pGPIOx = GPIOD;
 800055a:	4b1e      	ldr	r3, [pc, #120]	@ (80005d4 <main+0x88>)
 800055c:	607b      	str	r3, [r7, #4]
	GPIO_LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800055e:	2301      	movs	r3, #1
 8000560:	727b      	strb	r3, [r7, #9]
	GPIO_LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000562:	2302      	movs	r3, #2
 8000564:	72bb      	strb	r3, [r7, #10]
	GPIO_LED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000566:	2300      	movs	r3, #0
 8000568:	733b      	strb	r3, [r7, #12]
	GPIO_LED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800056a:	2301      	movs	r3, #1
 800056c:	72fb      	strb	r3, [r7, #11]

	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800056e:	230c      	movs	r3, #12
 8000570:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&GPIO_LED);
 8000572:	1d3b      	adds	r3, r7, #4
 8000574:	4618      	mov	r0, r3
 8000576:	f7ff fef7 	bl	8000368 <GPIO_Init>

	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800057a:	230d      	movs	r3, #13
 800057c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&GPIO_LED);
 800057e:	1d3b      	adds	r3, r7, #4
 8000580:	4618      	mov	r0, r3
 8000582:	f7ff fef1 	bl	8000368 <GPIO_Init>

	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000586:	230e      	movs	r3, #14
 8000588:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&GPIO_LED);
 800058a:	1d3b      	adds	r3, r7, #4
 800058c:	4618      	mov	r0, r3
 800058e:	f7ff feeb 	bl	8000368 <GPIO_Init>

	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000592:	230f      	movs	r3, #15
 8000594:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&GPIO_LED);
 8000596:	1d3b      	adds	r3, r7, #4
 8000598:	4618      	mov	r0, r3
 800059a:	f7ff fee5 	bl	8000368 <GPIO_Init>

	while(1){
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800059e:	210c      	movs	r1, #12
 80005a0:	480c      	ldr	r0, [pc, #48]	@ (80005d4 <main+0x88>)
 80005a2:	f7ff ffa8 	bl	80004f6 <GPIO_ToggleOutputPin>
		delay();
 80005a6:	f7ff ffbb 	bl	8000520 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_13);
 80005aa:	210d      	movs	r1, #13
 80005ac:	4809      	ldr	r0, [pc, #36]	@ (80005d4 <main+0x88>)
 80005ae:	f7ff ffa2 	bl	80004f6 <GPIO_ToggleOutputPin>
		delay();
 80005b2:	f7ff ffb5 	bl	8000520 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_14);
 80005b6:	210e      	movs	r1, #14
 80005b8:	4806      	ldr	r0, [pc, #24]	@ (80005d4 <main+0x88>)
 80005ba:	f7ff ff9c 	bl	80004f6 <GPIO_ToggleOutputPin>
		delay();
 80005be:	f7ff ffaf 	bl	8000520 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_15);
 80005c2:	210f      	movs	r1, #15
 80005c4:	4803      	ldr	r0, [pc, #12]	@ (80005d4 <main+0x88>)
 80005c6:	f7ff ff96 	bl	80004f6 <GPIO_ToggleOutputPin>
		delay();
 80005ca:	f7ff ffa9 	bl	8000520 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 80005ce:	bf00      	nop
 80005d0:	e7e5      	b.n	800059e <main+0x52>
 80005d2:	bf00      	nop
 80005d4:	40020c00 	.word	0x40020c00

080005d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d8:	480d      	ldr	r0, [pc, #52]	@ (8000610 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005da:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005e0:	480c      	ldr	r0, [pc, #48]	@ (8000614 <LoopForever+0x6>)
  ldr r1, =_edata
 80005e2:	490d      	ldr	r1, [pc, #52]	@ (8000618 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005e4:	4a0d      	ldr	r2, [pc, #52]	@ (800061c <LoopForever+0xe>)
  movs r3, #0
 80005e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e8:	e002      	b.n	80005f0 <LoopCopyDataInit>

080005ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ee:	3304      	adds	r3, #4

080005f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005f4:	d3f9      	bcc.n	80005ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005f6:	4a0a      	ldr	r2, [pc, #40]	@ (8000620 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f8:	4c0a      	ldr	r4, [pc, #40]	@ (8000624 <LoopForever+0x16>)
  movs r3, #0
 80005fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005fc:	e001      	b.n	8000602 <LoopFillZerobss>

080005fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000600:	3204      	adds	r2, #4

08000602 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000602:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000604:	d3fb      	bcc.n	80005fe <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8000606:	f000 f811 	bl	800062c <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800060a:	f7ff ff9f 	bl	800054c <main>

0800060e <LoopForever>:

LoopForever:
  b LoopForever
 800060e:	e7fe      	b.n	800060e <LoopForever>
  ldr   r0, =_estack
 8000610:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000614:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000618:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800061c:	08000694 	.word	0x08000694
  ldr r2, =_sbss
 8000620:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000624:	2000001c 	.word	0x2000001c

08000628 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000628:	e7fe      	b.n	8000628 <ADC_IRQHandler>
	...

0800062c <__libc_init_array>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	4d0d      	ldr	r5, [pc, #52]	@ (8000664 <__libc_init_array+0x38>)
 8000630:	4c0d      	ldr	r4, [pc, #52]	@ (8000668 <__libc_init_array+0x3c>)
 8000632:	1b64      	subs	r4, r4, r5
 8000634:	10a4      	asrs	r4, r4, #2
 8000636:	2600      	movs	r6, #0
 8000638:	42a6      	cmp	r6, r4
 800063a:	d109      	bne.n	8000650 <__libc_init_array+0x24>
 800063c:	4d0b      	ldr	r5, [pc, #44]	@ (800066c <__libc_init_array+0x40>)
 800063e:	4c0c      	ldr	r4, [pc, #48]	@ (8000670 <__libc_init_array+0x44>)
 8000640:	f000 f818 	bl	8000674 <_init>
 8000644:	1b64      	subs	r4, r4, r5
 8000646:	10a4      	asrs	r4, r4, #2
 8000648:	2600      	movs	r6, #0
 800064a:	42a6      	cmp	r6, r4
 800064c:	d105      	bne.n	800065a <__libc_init_array+0x2e>
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f855 3b04 	ldr.w	r3, [r5], #4
 8000654:	4798      	blx	r3
 8000656:	3601      	adds	r6, #1
 8000658:	e7ee      	b.n	8000638 <__libc_init_array+0xc>
 800065a:	f855 3b04 	ldr.w	r3, [r5], #4
 800065e:	4798      	blx	r3
 8000660:	3601      	adds	r6, #1
 8000662:	e7f2      	b.n	800064a <__libc_init_array+0x1e>
 8000664:	0800068c 	.word	0x0800068c
 8000668:	0800068c 	.word	0x0800068c
 800066c:	0800068c 	.word	0x0800068c
 8000670:	08000690 	.word	0x08000690

08000674 <_init>:
 8000674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000676:	bf00      	nop
 8000678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067a:	bc08      	pop	{r3}
 800067c:	469e      	mov	lr, r3
 800067e:	4770      	bx	lr

08000680 <_fini>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	bf00      	nop
 8000684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000686:	bc08      	pop	{r3}
 8000688:	469e      	mov	lr, r3
 800068a:	4770      	bx	lr
